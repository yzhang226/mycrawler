<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for PetClinic's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

   <!--  <import resource="mvc-view-config.xml"/> -->
   
<!--    <mvc:default-servlet-handler/>   -->
 	<mvc:annotation-driven />

	<!--
		- This bean processes annotated handler methods, applying PetClinic-specific PropertyEditors
		- for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
	-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0"/>
		<property name="webBindingInitializer">
			<bean class="org.omega.crawler.common.web.editor.BindingInitializer"/>
		</property>
	</bean>

<!-- 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> -->
<!-- 		<property name="webBindingInitializer"> -->
<!-- 			<bean class="com.mobiusws.tcg.assets.common.web.editor.SystemWebBinding" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->
   
<!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
<!--         <property name="contentNegotiationManager" ref="cnManager"/> -->
        
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="xml" value="application/xml" />
                <entry key="atom" value="application/atom+xml" />
                <entry key="json" value="application/json" />
            </map>
        </property>
        
        <property name="viewResolvers">
        	<list>
			    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			        <property name="prefix" value="/jsp/"/>
			        <property name="suffix" value=".jsp"/>
			    </bean>
			    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
        	</list>
        </property>
        
        <property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
        
    </bean>
    
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set upload file max size is 10MB -->
		<property name="maxUploadSize">
			<value>100010485761</value>
		</property>
	</bean>

<!-- 	<bean name="htmlviewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/web/" p:suffix=".html" p:order="10"/> -->
<!--  	<bean name="viewResolver" class="org.springframework.web.servlet.view.XmlViewResolver" p:order="9"/> -->
        
    <!--
        - POJOs labeled with the @Controller and @Service annotations are auto-detected.
    -->
    <context:component-scan base-package="org.omega.crawler">
    	<context:include-filter type="regex" expression=".*Controller"/>
	</context:component-scan>
	<context:component-scan base-package="org.omega.trade">
    	<context:include-filter type="regex" expression=".*Controller"/>
	</context:component-scan>

<!--     <mvc:annotation-driven conversion-service="conversionService"/> -->

    <!--  all resources inside folder src/main/webapp/resources are mapped so they can be refered to inside JSP files
        (see header.jsp for more details) -->
<!--     <mvc:resources mapping="/resources/**" location="/resources/"/> -->



    <!--
		- This bean resolves specific types of exceptions to corresponding logical
		- view names for error views. The default behaviour of DispatcherServlet
		- is to propagate all exceptions to the servlet container: this will happen
		- here with all other types of exceptions.
	-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver (declared in mvc-view-config.xml) -->
        <property name="defaultErrorView" value="error"/>
        <property name="warnLogCategory" value="warn"/>
        <property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">error</prop>
				<prop key="org.springframework.transaction.TransactionException">error</prop>
<!--				<prop key="java.sql.SQLException">error</prop>-->
<!--				<prop key="com.hp.common.exception.ServiceException">jsp/error/serviceExcetion</prop>-->
<!--				<prop key="java.lang.RuntimeException">error</prop>-->
			</props>
		</property>
    </bean>

</beans>
